{"name":"Article androidmanifest","tagline":"AndroidManifest合并原理 ","body":"## 1. 合并冲突规则（merge conflict rules）\r\n合并冲突，是指多个Manifest文件中含有同一属性但值不同时，默认合并规则解决不了从而导致的冲突。\r\n当冲突发生时，高优先级的Manifest属性值会覆盖低优先级属性值。这个优先级规则由高到低依次是：\r\n`buildType下的Manifest设置->productFlavor下的Manifest设置->主工程src/main->dependency&library`\r\n## 2. 合并冲突标记和选择器（merge conflict marker&selector）\r\n合并冲突标记，是android tools namespace中的一个属性，用来解决默认冲突规则解决不了的冲突。\r\n主要包含以下几个：\r\n    merge\r\n    默认合并操作。\r\n    replace\r\n    高优先级替换低优先级Manifest文件中的属性\r\n    strict\r\n    属性相同而值不同时会报错，除非通过冲突规则resolved\r\n    merge-only\r\n    仅合并低优先级的属性\r\n    remove\r\n    移除指定的低优先级的属性\r\n    remove-All\r\n    移除相同节点类型下所有低优先级的属性\r\n## 3. 向AndroidManifest文件注入build变量值\r\n注入build变量值通常需要使用manifestPlaceholders，applicationId属性除外。另外支持部分注入，如android:authority=\"com.acme.${localApplicationId}.foo\".\r\n例子（1）注入applicationId\r\nManifest entry:\r\n`<activity android:name=\".Main\">\r\n    <intent-filter>\r\n        <action android:name=\"${applicationId}.foo\"></action>\r\n    </intent-filter>\r\n</activity>`\r\nGradle build file:\r\n`android {\r\n    compileSdkVersion 22\r\n    buildToolsVersion \"22.0.1\"\r\n\r\n    productFlavors {\r\n        flavor1 {\r\n            applicationId = \"com.mycompany.myapplication.productFlavor1\"\r\n        }\r\n    }`\r\nMerged manifest value:\r\n`<action android:name=\"com.mycompany.myapplication.productFlavor1.foo\">`\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}